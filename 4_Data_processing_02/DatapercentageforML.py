# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vQS-2dfG-8vZfYaxKgj0Rj4S8GP9FcJ3
"""

try:
  import google.colab
  IN_COLAB = True
except:
  IN_COLAB = False

if IN_COLAB:
    !apt-get install openjdk-8-jdk-headless -qq > /dev/null
    !wget -q https://archive.apache.org/dist/spark/spark-3.3.2/spark-3.3.2-bin-hadoop3.tgz
    !tar xf spark-3.3.2-bin-hadoop3.tgz
    !mv spark-3.3.2-bin-hadoop3 spark
    !pip install -q findspark
    import os
    os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-8-openjdk-amd64"
    os.environ["SPARK_HOME"] = "/content/spark"

import findspark
findspark.init()

spark_url= 'local'

from pyspark.sql import SparkSession
from pyspark.sql import SQLContext

import csv
import os
import ast

from pyspark.sql.functions import col, explode, split, regexp_replace, sum as _sum, collect_list, concat_ws, lit

from pyspark.sql import SparkSession


spark = SparkSession.builder\
        .master(spark_url)\
        .appName('Spark Tutorial')\
        .config('spark.ui.port', '4040')\
        .getOrCreate()

def process_column(df, col_name, new_col):
    cleaned_col = regexp_replace(col(col_name), "[\\[\\]']", "")

    df = df.withColumn(new_col, explode(split(cleaned_col, ", "))) \
           .withColumn("key", split(col(new_col), "~")[0]) \
           .withColumn("value", split(col(new_col), "~")[1].cast("int")) \
           .na.drop(subset=["value"])
    df = df.withColumn("key", regexp_replace(col("key"), '[^a-zA-Z0-9]', ''))
    return df

input_csv = 'KU_cited.csv'
output_csv = 'KU_globalpercentage.csv'

with open(output_csv, 'w', newline='', encoding='utf-8') as csv_file:
    csv_writer = csv.writer(csv_file)

    csv_writer.writerow(['order', 'global'])


    with open(input_csv, 'r', encoding='utf-8') as input_file:

        csv_reader = csv.DictReader(input_file)

        for row in csv_reader:
            if row['country'] == '[]':
                percentage = 0


            year_data = row['country'].strip("[]").split(", ")

            if isinstance(year_data, list):
                data = ''.join(year_data)
            cleaned_data = data.replace('[', '').replace(']', '').replace('""', '').replace('"["','').replace('"]"','')
            sum = 0
            total= 0

            for entry in cleaned_data.split("'"):

               if "~" in entry:
                    try:

                        country, number = entry.split('~')
                        number = int(number)
                        total += number
                        if country == 'Thailand':
                          sum += number

                        percentage = ((total - sum)/total)*100

                    except ValueError:
                        print(f"Skipping invalid entry: {entry}")
            csv_writer.writerow([row['order'], percentage ])


input_csv = 'CU_citedbydata.csv'
output_csv = 'CU_globalpercentage.csv'

with open(output_csv, 'w', newline='', encoding='utf-8') as csv_file:
    csv_writer = csv.writer(csv_file)

    csv_writer.writerow(['filename', 'global'])

    with open(input_csv, 'r', encoding='utf-8') as input_file:

        csv_reader = csv.DictReader(input_file)

        for row in csv_reader:
            if row['country'] == '[]':
                percentage = 0


            year_data = row['country'].strip("[]").split(", ")

            if isinstance(year_data, list):
                data = ''.join(year_data)
            cleaned_data = data.replace('[', '').replace(']', '').replace('""', '').replace('"["','').replace('"]"','')
            sum = 0
            total= 0

            for entry in cleaned_data.split("'"):

               if "~" in entry:
                    try:

                        country, number = entry.split('~')
                        number = int(number)
                        total += number
                        if country == 'Thailand':
                          sum += number

                        percentage = ((total - sum)/total)*100

                    except ValueError:
                        print(f"Skipping invalid entry: {entry}")
            csv_writer.writerow([row['filename'], percentage ])

input_csv = 'KU_cited.csv'
output_csv = 'KU_trendypaperpercentage.csv'

with open(output_csv, 'w', newline='', encoding='utf-8') as csv_file:
    csv_writer = csv.writer(csv_file)

    csv_writer.writerow(['filename', 'global'])

    with open(input_csv, 'r', encoding='utf-8') as input_file:

        csv_reader = csv.DictReader(input_file)

        for row in csv_reader:
            if row['country'] == '[]':
                percentage = 0


            year_data = row['country'].strip("[]").split(", ")

            if isinstance(year_data, list):
                data = ''.join(year_data)
            cleaned_data = data.replace('[', '').replace(']', '').replace('""', '').replace('"["','').replace('"]"','')
            sum = 0
            total= 0

            for entry in cleaned_data.split("'"):

               if "~" in entry:
                    try:
                        year, number = entry.strip("'").split('~')
                        year = int(year)
                        number = int(number)
                        total += number
                        if 2021 <= year <= 2025:
                            sum += number
                        percentage = ((sum)/total)*100

                    except ValueError:
                        print(f"Skipping invalid entry: {entry}")
            csv_writer.writerow([row['order'], percentage ])


input_csv = 'CU_citedbydata.csv'
output_csv = 'CU_trendypaperpercentage.csv'

with open(output_csv, 'w', newline='', encoding='utf-8') as csv_file:
    csv_writer = csv.writer(csv_file)

    csv_writer.writerow(['filename', 'global'])

    with open(input_csv, 'r', encoding='utf-8') as input_file:

        csv_reader = csv.DictReader(input_file)

        for row in csv_reader:
            if row['country'] == '[]':
                percentage = 0


            year_data = row['country'].strip("[]").split(", ")

            if isinstance(year_data, list):
                data = ''.join(year_data)
            cleaned_data = data.replace('[', '').replace(']', '').replace('""', '').replace('"["','').replace('"]"','')
            sum = 0
            total= 0

            for entry in cleaned_data.split("'"):

               if "~" in entry:
                    try:
                        year, number = entry.strip("'").split('~')
                        year = int(year)
                        number = int(number)
                        total += number
                        if 2021 <= year <= 2025:
                            sum += number
                        percentage = ((sum)/total)*100

                    except ValueError:
                        print(f"Skipping invalid entry: {entry}")
            csv_writer.writerow([row['filename'], percentage ])